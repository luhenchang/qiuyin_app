
def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
} 

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}
def keyPropertiesFile=rootProject.file("key.properties")
def keyProperties=new Properties()
keyProperties.load(new FileInputStream(keyPropertiesFile))
apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'com.mob.sdk'
android {
    compileSdkVersion 28
    dexOptions {
        incremental true
        javaMaxHeapSize '4g'
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    lintOptions {
        disable 'InvalidPackage'
    }
    
    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.qiuyin.qiuyinapp"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
        //testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        // ndk {
	    // abiFilters "armeabi", "armeabi-v7a", "x86", "x86_64", "mips", "mips64", "arm64-v8a"        
        //  }
        ndk {
            abiFilters "armeabi", "armeabi-v7a", "x86", "x86_64", "mips", "mips64", "arm64-v8a"
        }
        manifestPlaceholders = [
                AMAP_KEY : "435fdec869061ec94e1079cd33a1c8fd", /// 高德地图key
             
        ]
    }

    signingConfigs {
    debug {
            storeFile file("/Users/wangfeiwangfei/wangfei/soft/keystore/debug.keystore")
            storePassword "123456"
            keyAlias "androiddebugkey"
            keyPassword "123456"
            
        }
    release {
                //  keyAlias keyProperties['keyAlias']
                //  keyPassword keyProperties['keyPassword']
                //  storeFile file(keyProperties['storeFile'])
                //  storePassword keyProperties['storePassword']
            storeFile file("/Users/touchwaves/Documents/my_release_key/my-release-key.keystore")
            storePassword "123456"
            keyAlias "my-key-alias"
            keyPassword "123456"
        }
}
   buildTypes {
     profile {
            initWith debug
        }
        debug {
        //    ndk {
	    // abiFilters "armeabi", "armeabi-v7a", "x86", "x86_64", "mips", "mips64", "arm64-v8a"        
        //  }
            signingConfig signingConfigs.debug
               proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            
        //    ndk {
	    // abiFilters "armeabi", "armeabi-v7a", "x86", "x86_64", "mips", "mips64", "arm64-v8a"        
        //  }
        
            signingConfig signingConfigs.release
            minifyEnabled false
            useProguard true
           shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
   }
     sourceSets {
        main {
            jniLibs.srcDirs 'jnilibs'
        }
    }
   packagingOptions {
        exclude 'lib/arm64-v8a/libgojni.so'
        exclude 'lib/x86/libgojni.so'
        exclude 'lib/x86_64/libgojni.so'
        pickFirst 'lib/armeabi-v7a/libapp.so'
        pickFirst 'lib/armeabi/libapp.so'
        pickFirst 'lib/arm64-v8a/libapp.so'
        pickFirst 'lib/x86/libapp.so'
    }
}

flutter {
    source '../..'
}

dependencies {
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.1.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.1.1'
    compile 'com.android.support:multidex:1.0.1'
   // 高德
    implementation "com.amap.api:location:latest.integration" 
   //百度
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    implementation fileTree(includes: ['*.jar'], dir: 'Libs')
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'
   
}
MobSDK {
    appKey "2f336bff69660"
    appSecret "5b835369a4b8ba53f8b1d60ffd569bd3"
    
    MobPush {
        debugLevel 4
        devInfo {
            // XIAOMI {
            //     appId "2882303761518300242"
            //     appKey "5581830029242"
            // }

            // MEIZU {
            //     appId "127372"
            //     appKey "3fc6d1acc7ea4f90a0304967ee3a74ae"
            // }

            FCM {
                //设置默认推送通知显示图标
                iconRes "@mipmap/ic_launcher"
            }

            // OPPO {
            //     appKey "6303014506164557acc69df6ef14300b"
            //     appSecret "c850609d8a0f492f8b9eeca1189aaec2"
            // }

            // VIVO {
            //     appId "18568"
            //     appKey "9b01729c-6140-4ad3-ac79-4c4543e12130"
            // }
        }
    }
   
}
